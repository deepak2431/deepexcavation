"""
Django settings for untitled project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

gettext = lambda s: s
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'add_in_conf')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['www.deepexcavation.com', 'deepexcavdemo.skservers.com', 'www.deepex.com']

ADMINS = (
    ('Christos Kopanos', 'ckopanos@redmob.gr'),
)
MANAGERS = (
    ('DeepExcavation', 'deepexcavation@deepexcavation.com'),
    ('DeepExcavation Sales', 'sales@deepexcavation.com'),
    ('Chrysa', 'chrysa@deepexcavation.com'),
    )

# Application definition

INSTALLED_APPS = [
    'djangocms_admin_style',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.redirects',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'django.contrib.humanize',
    'website',
    'carton',
    'bootstrap3',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    #'allauth.socialaccount.providers.facebook',
    #'allauth.socialaccount.providers.google',
    #'allauth.socialaccount.providers.linkedin',
    #'allauth.socialaccount.providers.linkedin_oauth2',
    #'allauth.socialaccount.providers.twitter',
    'django_cleanup',
    'django_countries',
    'phonenumber_field',
    'aldryn_apphooks_config',
    'website.applications.cms',  # django CMS itself
    'treebeard',  # utilities for implementing a tree
    'menus',  # helper for model independent hierarchical website navigation
    'sekizai',  # for JavaScript and CSS management
    'easy_thumbnails',
    'website.applications.filer',
    'cmsplugin_filer_file',
    'cmsplugin_contact_plus',
    'adminsortable',
    'website.applications.cmsplugin_filer_image',
    'cmsplugin_filer_link',
    'djangocms_text_ckeditor',
    'aldryn_boilerplates',
    'djangocms_video',
    'twitter_tag',
    'aldryn_bootstrap3',
    'djangocms_snippet',
    'parler',
    'taggit',
    'taggit_autosuggest',
    'meta',
    'templatetag_handlebars',
    'iprestrict',
    'import_export',
    'djangocms_blog',
    'markdown_deux',  # Required for Knowledgebase item formatting
    'bootstrapform',  # Required for nicer formatting of forms with the default templates
    'helpdesk',  # This is us!
    'payments',
    'absolute',
    'aldryn_forms',
    'aldryn_forms.contrib.email_notifications',
    'captcha',
    'colorfield',
    'emailit',
]

AUTH_USER_MODEL = 'website.AppUser'

SITE_ID = 1
MIDDLEWARE_CLASSES = (
    'cms.middleware.utils.ApphookReloadMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'website.middleware.GeoIP2Middleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.contrib.sites.middleware.CurrentSiteMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.redirects.middleware.RedirectFallbackMiddleware',
    'cms.middleware.user.CurrentUserMiddleware',
    'cms.middleware.page.CurrentPageMiddleware',
    'iprestrict.middleware.IPRestrictMiddleware',
    'cms.middleware.toolbar.ToolbarMiddleware',
    'cms.middleware.language.LanguageCookieMiddleware',
)

ROOT_URLCONF = 'DeepExcavation.urls'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'aldryn_boilerplates.staticfile_finders.AppDirectoriesFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'website/templates')],
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.template.context_processors.csrf',
                'django.template.context_processors.tz',
                'sekizai.context_processors.sekizai',
                'django.template.context_processors.static',
                'cms.context_processors.cms_settings',
                'aldryn_boilerplates.context_processors.boilerplate',
                'website.context_processors.ui_params',
                'website.context_processors.shopping_cart'
            ],
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'aldryn_boilerplates.template_loaders.AppDirectoriesLoader',
                'django.template.loaders.app_directories.Loader',
            ],
        },
    },
]

WSGI_APPLICATION = 'DeepExcavation.wsgi.application'

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PARSER_CLASS": "redis.connection.HiredisParser",
            "SOCKET_CONNECT_TIMEOUT": 2,  # in seconds
            "SOCKET_TIMEOUT": 3,  # in seconds
        },
        "TIMEOUT": 7200,
        "KEY_PREFIX": "deepex"
    }
}
DJANGO_REDIS_IGNORE_EXCEPTIONS = True
DJANGO_REDIS_LOG_IGNORED_EXCEPTIONS = True
DJANGO_REDIS_LOGGER = 'django.request'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # backend can be changed
        'NAME': os.getenv('DEEPEXCAVATION_DATABASE', 'deepexcavation'),  # dbname can be changed
        'USER': os.getenv('DEEPEXCAVATION_USERNAME', 'username'),  # username should changed
        'HOST': os.getenv('DEEPEXCAVATION_DBHOST', 'localhost'),  # dbhost can be changed
        'PASSWORD': os.getenv('DEEPEXCAVATION_PASSWORD', 'password'),  # password should be changed
    }
}

ALDRYN_BOILERPLATE_NAME = 'deepexcavation'
# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
'django.contrib.auth.backends.ModelBackend',
'allauth.account.auth_backends.AuthenticationBackend',
)

ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 15
ACCOUNT_EMAIL_CONFIRMATION_HMAC = True
ACCOUNT_EMAIL_VERIFICATION = 'optional'
ACCOUNT_SIGNUP_FORM_CLASS = "website.forms.user.RegistrationForm"
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False
# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/
LOGIN_REDIRECT_URL = '/'
LANGUAGE_CODE = 'en'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = "https://assets.deepex.com/"

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "https://media.deepex.com/"

LANGUAGES = [
    ('en', 'English')
]
CMS_PAGE_CACHE = False
CMS_CACHE_DURATIONS = {
    'menus': 86400,
    'content': 3600,
    'permissions': 86400,
}
CMS_TEMPLATES = (
    ('tpl_home.html', 'Home page'),
    ('tpl_contact.html', 'Contact page'),
    ('sidebar_left.html', 'Left sidebar'),
    ('sidebar_right.html', 'Right sidebar'),
    ('fullwidth.html', 'Full width'),

)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'localhost'
EMAIL_PORT = 25

EMAIL_SUBJECT_PREFIX = "DeepExcavation - "
GENERIC_EMAIL_FROM = DEFAULT_FROM_EMAIL = CONTACT_PLUS_FROM_EMAIL = "deepexcavation@deepexcavation.com"
SERVER_EMAIL = GENERIC_EMAIL_FROM

# Your access token: Access token
TWITTER_OAUTH_TOKEN = os.getenv('TWITTER_OAUTH_TOKEN', 'dummy')
# Your access token: Access token secret
TWITTER_OAUTH_SECRET = os.getenv('TWITTER_OAUTH_SECRET', 'dummy')
# OAuth settings: Consumer key
TWITTER_CONSUMER_KEY = os.getenv('TWITTER_CONSUMER_KEY', 'dummy')
# OAuth settings: Consumer secret
TWITTER_CONSUMER_SECRET = os.getenv('TWITTER_CONSUMER_SECRET', 'dummy')

FILER_LINK_STYLES = (
    ("n", "Default"),
    ("btn btn-filled btn-primary btn-lg", "Green filled large"),
    ("btn btn-filled btn-primary btn-sm", "Green filled small"),
    ("btn btn-filled btn-primary", "Green filled"),
)
THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    # 'easy_thumbnails.processors.scale_and_crop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters',
)
META_SITE_PROTOCOL = 'http'
META_USE_SITES = True
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}

ALDRYN_BOOTSTRAP3_CAROUSEL_STYLES = [
    ('fullwidth', 'Home slider Version'),
]
ALDRYN_BOOTSTRAP3_ICONSETS = [
    ('glyphicons', 'glyphicons', 'Glyphicons'),
    ('fontawesome', 'fa', 'Font Awesome'),
]

SENDFILE_ROOT = MEDIA_ROOT
SENDFILE_BACKEND = 'sendfile.backends.nginx'
SENDFILE_URL = '/demo-downloads'
DEFAULT_CURRENCY = 'USD'
CART_PRODUCT_MODEL = 'website.models.order.OrderItemCart'
# help desk settings
HELPDESK_SUBMIT_A_TICKET_PUBLIC = False
HELPDESK_VIEW_A_TICKET_PUBLIC = False
HELPDESK_NAVIGATION_ENABLED = True
HELPDESK_UPDATE_PUBLIC_DEFAULT = False
HELPDESK_REDIRECT_TO_LOGIN_BY_DEFAULT = True
HELPDESK_ALLOW_NON_STAFF_TICKET_UPDATE = True
HELPDESK_STAFF_ONLY_TICKET_OWNERS = True
PAYMENT_HOST = os.getenv('PAYMENT_HOST', '127.0.0.1:8000')
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
PAYMENT_USES_SSL = SESSION_COOKIE_SECURE
PAYMENT_MODEL = 'website.Payment'
BRAINTREE_PAYMENTS = ('payments.braintree.BraintreeProvider', {
    'merchant_id': os.getenv("BRAINTREE_MERCHANT_ID", 'id'),
    'public_key': os.getenv("BRAINTREE_PUBLIC_KEY", 'key'),
    'private_key': os.getenv("BRAINTREE_PRIVATE_KEY", 'key'),
    'sandbox': True}),
PAYMENT_VARIANTS = {
    'paypal': ('payments.paypal.PaypalProvider', {
        'client_id': os.getenv('PAYPAL_CLIENT_ID', 'client_id'),
        'secret': os.getenv('PAYPAL_SECRET', 'secret'),
        'endpoint': 'https://api.paypal.com' if os.getenv('PAYPAL_PRODUCTION', False)
        else 'https://api.sandbox.paypal.com',
        'capture': False})
}
MAILCHIMP_API_KEY = os.getenv("MAILCHIMP_KEY", 'key')
MAILCHIMP_USER_NAME = os.getenv("MAILCHIMP_USER_NAME", 'username')
MAILCHIMP_LIST_ID = os.getenv('MAILCHIMP_LIST_ID', 'list_id')
DJANGOCMS_SNIPPET_THEME = 'github'
DJANGOCMS_SNIPPET_MODE = 'html'
GEOIP_PATH = os.path.join(BASE_DIR, 'geoip')
LANGUAGE_COOKIE_NAME = 'app_lang'
SESSION_COOKIE_NAME = 'app_sess'
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
APPEND_SLASH = False
GOOGLE_ANALYTICS_ID = os.getenv('GOOGLE_ANALYTICS_ID', 'dummy')
IPRESTRICT_RELOAD_RULES = True
IPRESTRICT_IGNORE_PROXY_HEADER = True
try:
    from .local_settings import *
except ImportError:
    pass